package generate


import (
  "fmt" 
  "ftgodev-tut/view/layout"
  "ftgodev-tut/models"
)


type ViewData struct {
  Images []models.Image

}

templ Index(data ViewData) {
  @layout.App(true) {
    <div class="flex w-full h-[calc(100vh-69px)]">
      <div class="w-[400px] border-r border-app p-4">
        @Form()
      </div>
      <div class="flex-1 bg-base-300">Images
      @Gallery(data.Images)
    </div>
  </div>
  }
}

templ Form() {
  <form
    hx-post="/generate"
    hx-swap="afterbegin"
    hx-target="#gallery"
  >
    <div>
      <button class="btn btn-primary w-full">generate<i class="fa-solid fa-arrow-right"></i></button>
    </div>
  </form>
}

templ Gallery(images []models.Image) {
  <div class="grid grid-cols-4 p-4 gap-4 w-full" id="gallery">
  for _, image := range images {
    @GalleryImage(image)
  }
  </div>
}


templ GalleryImage(image models.Image) {
  if image.Status == models.ImageStatusCompleted {
    <div class="bg-green aspect-[3/4] rounded-xl "></div>
  } else if image.Status == models.ImageStatusFailed{
    <div class="bg-base-100 aspect-[3/4] rounded-xl flex justify-center items-center">
      <i class="fa-solid fa-bomb"></i>
    </div>
   } else if image.Status == models.ImageStatusPending{
     // this div is going to poll every second
    <div
      hx-get={fmt.Sprintf("/generate/image/status/%d", image.ID)}
      hx-trigger="load delay:3s" 
      class="bg-base-100 aspect-[3/4] rounded-xl flex justify-center items-center"
    >
      <span class="loading loading-spinner laoding-lg"></span>
    </div>
  }
}
